// Package openapi GENERATED BY SWAG; DO NOT EDIT
// This file was generated by swaggo/swag
package openapi

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api": {
            "post": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Creates post if user have permision",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "posts"
                ],
                "summary": "Create Post",
                "parameters": [
                    {
                        "description": "information for post creation",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ports.createPostRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/httperr.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/down/{post_id}": {
            "put": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Downwotes Post and increments its score.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "posts"
                ],
                "summary": "Downwote Post",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "account id",
                        "name": "post_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/httperr.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/list": {
            "get": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Retrives list of json formated objects",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "posts"
                ],
                "summary": "List",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "page size",
                        "name": "page_size",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "page number",
                        "name": "page_number",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ports.getPostResponse"
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/httperr.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/up/{post_id}": {
            "put": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Upwotes Post and increments its score.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "posts"
                ],
                "summary": "Upwote Post",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "account id",
                        "name": "post_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/httperr.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/{post_id}": {
            "delete": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Deletes post if user have permision",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "posts"
                ],
                "summary": "Delete Post",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "account id",
                        "name": "post_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/httperr.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "httperr.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                },
                "slug": {
                    "type": "string"
                }
            }
        },
        "ports.createPostRequest": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                }
            }
        },
        "ports.getPostResponse": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                },
                "post_id": {
                    "type": "integer"
                },
                "posted_by": {
                    "type": "string"
                },
                "posted_on": {
                    "type": "string"
                },
                "score": {
                    "type": "integer"
                }
            }
        }
    },
    "securityDefinitions": {
        "JWT": {
            "type": "apiKey",
            "name": "authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8081",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "Telegram Subs API",
	Description:      "This service provide functionality for storing and managing privat telegram channels with subscription based payments for acessing content.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
